h1.text-2xl.font-bold.mb-4 Edit Prior Spend

.mb-4
  = link_to "← Back to Prior Spends", admin_prior_spends_path, class: "text-blue-600 hover:text-blue-800"

.bg-white.shadow.overflow-hidden.sm:rounded-md
  .px-4.py-5.border-b.border-gray-200.sm:px-6
    h3.text-lg.leading-6.font-medium.text-gray-900 Prior Spend Details

  .px-4.py-5.sm:p-6
    = form_with(model: [:admin, @prior_spend], local: true, class: "space-y-6") do |f|
      - if @prior_spend.errors.any?
        .bg-red-100.border.border-red-400.text-red-700.px-4.py-3.rounded.relative.mb-4
          h2.text-lg.font-bold = "#{pluralize(@prior_spend.errors.count, "error")} prohibited this prior spend from being saved:"
          ul.list-disc.list-inside
            - @prior_spend.errors.full_messages.each do |message|
              li = message

      .grid.grid-cols-1.gap-y-6.gap-x-4.sm:grid-cols-6
        .sm:col-span-3
          = f.label :company_id, class: "block text-sm font-medium text-gray-700"
          .mt-1
            = f.collection_select :company_id, @companies, :id, :name, 
                                { prompt: "Select company" }, 
                                { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md" }

        .sm:col-span-3
          = f.label :carrier, class: "block text-sm font-medium text-gray-700"
          .mt-1
            = f.select :carrier, PriorSpend::CARRIERS,
                      { prompt: "Select carrier" },
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md",
                        data: { controller: "prior-spend", action: "change->prior-spend#updateServiceTypes" } }

        .sm:col-span-3
          = f.label :spend_type, class: "block text-sm font-medium text-gray-700"
          .mt-1
            = f.select :spend_type, PriorSpend::SPEND_TYPES.map { |type| [type.titleize, type] },
                      { prompt: "Select spend type" },
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md",
                        data: { action: "change->prior-spend#updateServiceTypes" } }

        .sm:col-span-3
          = f.label :service_type, class: "block text-sm font-medium text-gray-700"
          .mt-1
            - service_types = if @prior_spend.spend_type == 'surcharge'
                             PriorSpend::SURCHARGE_TYPES
                           elsif @prior_spend.carrier == 'FedEx'
                             PriorSpend::FEDEX_SERVICE_TYPES
                           elsif @prior_spend.carrier == 'UPS'
                             PriorSpend::UPS_SERVICE_TYPES
                           else
                             []
                           end
            = f.select :service_type, service_types,
                      { prompt: "Select service type" },
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md",
                        data: { target: "prior-spend.serviceTypeSelect" } }

        .sm:col-span-3
          = f.label :shipment_count, class: "block text-sm font-medium text-gray-700"
          .mt-1
            = f.number_field :shipment_count, min: 0, class: "shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"

        .sm:col-span-3
          = f.label :spend_amount, class: "block text-sm font-medium text-gray-700"
          .mt-1.relative.rounded-md.shadow-sm
            .absolute.inset-y-0.left-0.pl-3.flex.items-center.pointer-events-none
              span.text-gray-500.sm:text-sm $
            = f.number_field :spend_amount, min: 0, step: 0.01, class: "pl-7 shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"

      .pt-5
        .flex.justify-end
          = link_to "Cancel", admin_prior_spends_path, class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mr-2"
          = f.submit "Update", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"

javascript:
  document.addEventListener('DOMContentLoaded', function() {
    const carrierSelect = document.querySelector('[data-controller="prior-spend"]');
    const spendTypeSelect = document.querySelector('[data-action="change->prior-spend#updateServiceTypes"]');
    const serviceTypeSelect = document.querySelector('[data-target="prior-spend.serviceTypeSelect"]');
    
    const fedexServiceTypes = #{PriorSpend::FEDEX_SERVICE_TYPES.to_json.html_safe};
    const upsServiceTypes = #{PriorSpend::UPS_SERVICE_TYPES.to_json.html_safe};
    const surchargeTypes = #{PriorSpend::SURCHARGE_TYPES.to_json.html_safe};
    
    function updateServiceTypes() {
      const carrier = carrierSelect.value;
      const spendType = spendTypeSelect.value;
      
      // Remember the currently selected value if any
      const currentValue = serviceTypeSelect.value;
      
      // Clear existing options except the prompt
      serviceTypeSelect.innerHTML = '<option value="">Select service type</option>';
      
      // Add appropriate options based on carrier and spend type
      let options = [];
      if (spendType === 'surcharge') {
        options = surchargeTypes;
      } else if (carrier === 'FedEx') {
        options = fedexServiceTypes;
      } else if (carrier === 'UPS') {
        options = upsServiceTypes;
      }
      
      options.forEach(option => {
        const optionElement = document.createElement('option');
        optionElement.value = option;
        optionElement.textContent = option;
        if (option === currentValue) {
          optionElement.selected = true;
        }
        serviceTypeSelect.appendChild(optionElement);
      });
    }
    
    // Attach event listeners
    carrierSelect.addEventListener('change', updateServiceTypes);
    spendTypeSelect.addEventListener('change', updateServiceTypes);
  });
