div.max-w-7xl.mx-auto.px-4.sm:px-6.lg:px-8.pb-12 data-controller="prior-spend"
  / Breadcrumbs
  nav.flex.mb-6 aria-label="Breadcrumb"
    ol.inline-flex.items-center.space-x-1.md:space-x-3
      li.inline-flex.items-center
        = link_to admin_prior_spends_path, class: "inline-flex items-center text-sm font-medium text-gray-500 hover:text-blue-600 transition duration-150 ease-in-out" do
          svg.w-4.h-4.mr-2[xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"]
            path[d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"]
          | Prior Spend
      li
        div.flex.items-center
          svg.w-6.h-6.text-gray-400[xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20"]
            path[fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"]
          span.ml-1.text-sm.font-medium.text-gray-500.md:ml-2 New Entry

  div.pb-5.border-b.border-gray-200.mb-6
    div.flex-1.min-w-0
      h2.text-2xl.font-extrabold.text-gray-900.sm:text-3xl.sm:truncate
        | New Prior Spend Entry
      p.mt-1.text-sm.text-gray-500
        | Create a new prior spend entry for calculating savings comparisons.

  div.rounded-lg.overflow-hidden
    = render "form"

/ JavaScript for the form
- fedex_service_types = PriorSpend::FEDEX_SERVICE_TYPES.to_json
- ups_service_types = PriorSpend::UPS_SERVICE_TYPES.to_json
- surcharge_types = PriorSpend::SURCHARGE_TYPES.to_json

javascript:
  document.addEventListener('DOMContentLoaded', function() {
    const carrierSelect = document.querySelector('[data-controller="prior-spend"]');
    const spendTypeSelect = document.querySelector('[data-action="change->prior-spend#updateServiceTypes"]');
    const serviceTypeSelect = document.querySelector('[data-target="prior-spend.serviceTypeSelect"]');
    
    const fedexServiceTypes = #{fedex_service_types};
    const upsServiceTypes = #{ups_service_types};
    const surchargeTypes = #{surcharge_types};
    
    function updateServiceTypes() {
      const carrier = carrierSelect.value;
      const spendType = spendTypeSelect.value;
      
      // Clear existing options except the prompt
      serviceTypeSelect.innerHTML = '<option value="">Select service type</option>';
      
      // Add appropriate options based on carrier and spend type
      let options = [];
      if (spendType === 'surcharge') {
        options = surchargeTypes;
      } else if (carrier === 'FedEx') {
        options = fedexServiceTypes;
      } else if (carrier === 'UPS') {
        options = upsServiceTypes;
      }
      
      options.forEach(option => {
        const optionElement = document.createElement('option');
        optionElement.value = option;
        optionElement.textContent = option;
        serviceTypeSelect.appendChild(optionElement);
      });
    }
    
    // Attach event listeners
    carrierSelect.addEventListener('change', updateServiceTypes);
    spendTypeSelect.addEventListener('change', updateServiceTypes);
    
    // Run once on page load
    updateServiceTypes();
  });
